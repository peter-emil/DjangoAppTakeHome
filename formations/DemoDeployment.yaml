AWSTemplateFormatVersion: "2010-09-09"
Description: A cloudformation template for provisioning the infrastructure needed to run this demo project

Mappings:
  RegionMap:
    us-east-1:
      WebsiteEndpoint: s3-website-us-east-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: us-east-1.elasticbeanstalk.com
    us-east-2:
      WebsiteEndpoint: s3-website.us-east-2.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: us-east-2.elasticbeanstalk.com
    us-west-2:
      WebsiteEndpoint: s3-website-us-west-2.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: us-west-2.elasticbeanstalk.com
    us-west-1:
      WebsiteEndpoint: s3-website-us-west-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: us-west-1.elasticbeanstalk.com
    eu-west-1:
      WebsiteEndpoint: s3-website-eu-west-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: eu-west-1.elasticbeanstalk.com
    eu-central-1:
      WebsiteEndpoint: s3-website.eu-central-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: eu-central-1.elasticbeanstalk.com
    ap-southeast-1:
      WebsiteEndpoint: s3-website-ap-southeast-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: ap-southeast-1.elasticbeanstalk.com
    ap-northeast-1:
      WebsiteEndpoint: s3-website-ap-northeast-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: ap-northeast-1.elasticbeanstalk.com
    ap-southeast-2:
      WebsiteEndpoint: s3-website-ap-southeast-2.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: ap-southeast-2.elasticbeanstalk.com
    ap-northeast-2:
      WebsiteEndpoint: s3-website.ap-northeast-2.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: ap-northeast-2.elasticbeanstalk.com
    sa-east-1:
      WebsiteEndpoint: s3-website-sa-east-1.amazonaws.com
      RestEndpoint: s3.amazonaws.com
      EBEndpoint: sa-east-1.elasticbeanstalk.com

Parameters:
  StaticContentBucketName:
    Description: The bucket name that will be used to store the static content of the project
    Type: String
  DatabaseName:
    Description: Name of the database inside the RDS instance to use with this stack
    Type: String
  DatabaseUser:
    Description: The username that should be used when connecting to the RDS instance
    Type: String
  DatabasePassword:
    Description: The password of DatabaseUser that should be used when connecting to the RDS instance
    Type: String
  DatabaseHost:
    Description: The host serving this database
    Type: String
  ElasticBeanStalkUrlPrefix:
    Description: Elastic Beanstalk will attempt to use this as a CNAME prefix
    Type: String

Resources:
  EbServiceIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: elasticbeanstalk
      Policies:
        - PolicyName: RootPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DescribeInstanceHealth
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeTargetHealth
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceStatus
                  - ec2:GetConsoleOutput
                  - ec2:AssociateAddress
                  - ec2:DescribeAddresses
                  - ec2:DescribeSecurityGroups
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeAutoScalingInstances
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:DescribeNotificationConfigurations
                  - sns:Publish
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*:log-stream:*
              - Sid: AllowCloudformationOperationsOnElasticBeanstalkStacks
                Effect: Allow
                Action:
                  - cloudformation:*
                Resource:
                  - arn:aws:cloudformation:*:*:stack/awseb-*
                  - arn:aws:cloudformation:*:*:stack/eb-*
              - Sid: AllowDeleteCloudwatchLogGroups
                Effect: Allow
                Action:
                  - logs:DeleteLogGroup
                Resource:
                  - arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*
              - Sid: AllowS3OperationsOnElasticBeanstalkBuckets
                Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::elasticbeanstalk-*
                  - arn:aws:s3:::elasticbeanstalk-*/*
              - Sid: AllowLaunchTemplateRunInstances
                Effect: Allow
                Action: ec2:RunInstances
                Resource: "*"
                Condition:
                  ArnLike:
                    ec2:LaunchTemplate: arn:aws:ec2:*:*:launch-template/*
              - Sid: AllowOperations
                Effect: Allow
                Action:
                  - autoscaling:AttachInstances
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:DeleteLaunchConfiguration
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:DeleteScheduledAction
                  - autoscaling:DescribeAccountLimits
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeAutoScalingInstances
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeLoadBalancers
                  - autoscaling:DescribeNotificationConfigurations
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:DescribeScheduledActions
                  - autoscaling:DetachInstances
                  - autoscaling:DeletePolicy
                  - autoscaling:PutScalingPolicy
                  - autoscaling:PutScheduledUpdateGroupAction
                  - autoscaling:PutNotificationConfiguration
                  - autoscaling:ResumeProcesses
                  - autoscaling:SetDesiredCapacity
                  - autoscaling:SuspendProcesses
                  - autoscaling:TerminateInstanceInAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - cloudwatch:PutMetricAlarm
                  - ec2:AssociateAddress
                  - ec2:AllocateAddress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:CreateLaunchTemplate
                  - ec2:CreateLaunchTemplateVersion
                  - ec2:DescribeLaunchTemplates
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:DeleteLaunchTemplate
                  - ec2:DeleteLaunchTemplateVersions
                  - ec2:CreateSecurityGroup
                  - ec2:DeleteSecurityGroup
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeAddresses
                  - ec2:DescribeImages
                  - ec2:DescribeInstances
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSnapshots
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeVpcClassicLink
                  - ec2:DisassociateAddress
                  - ec2:ReleaseAddress
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:TerminateInstances
                  - ecs:CreateCluster
                  - ecs:DeleteCluster
                  - ecs:DescribeClusters
                  - ecs:RegisterTaskDefinition
                  - elasticbeanstalk:*
                  - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
                  - elasticloadbalancing:ConfigureHealthCheck
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
                  - elasticloadbalancing:DescribeInstanceHealth
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeTargetHealth
                  - elasticloadbalancing:RegisterInstancesWithLoadBalancer
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DeregisterTargets
                  - iam:ListRoles
                  - iam:PassRole
                  - logs:CreateLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DescribeLogGroups
                  - rds:DescribeDBEngineVersions
                  - rds:DescribeDBInstances
                  - rds:DescribeOrderableDBInstanceOptions
                  - s3:GetObject
                  - s3:GetObjectAcl
                  - s3:ListBucket
                  - sns:CreateTopic
                  - sns:GetTopicAttributes
                  - sns:ListSubscriptionsByTopic
                  - sns:Subscribe
                  - sns:SetTopicAttributes
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - codebuild:CreateProject
                  - codebuild:DeleteProject
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - "*"
      Path: /


  Ec2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RootPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "s3:*"
                Resource:
                  - "*"
      Path: /


  FunctionalEbIamRoleInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref 'Ec2InstanceRole'


  DemoProjectApp:
    Type: "AWS::ElasticBeanstalk::Application"
    Properties:
      ApplicationName: "PetersDemoProject"
      Description: An Elastic Beanstalk application definition for this demo project


  DemoProjectEnv:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName: !Ref 'DemoProjectApp'
      Description: Development Environment for Demo Project App
      EnvironmentName: !Ref ElasticBeanStalkUrlPrefix
      CNAMEPrefix: !Ref ElasticBeanStalkUrlPrefix
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '3'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref FunctionalEbIamRoleInstanceProfile
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref EbServiceIamRole
        - Namespace: aws:elasticbeanstalk:container:python
          OptionName: WSGIPath
          Value: project/wsgi.py
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_NAME
          Value: !Ref DatabaseName
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_USER
          Value: !Ref DatabaseUser
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_HOST
          Value: !Ref DatabaseHost
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_PASSWORD
          Value: !Ref DatabasePassword
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: S3_BUCKET_NAME
          Value: !Ref StaticContentBucketName
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: ALLOWED_HOSTS
          Value: !Sub
            - '${cname}.${ebregional}'
            - cname: !Ref ElasticBeanStalkUrlPrefix
              ebregional: !FindInMap
                - RegionMap
                - !Ref 'AWS::Region'
                - EBEndpoint
      SolutionStackName: 64bit Amazon Linux 2018.03 v2.9.4 running Python 3.6
      Tier:
        Name: WebServer
        Type: Standard



  StaticContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'StaticContentBucketName'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: 'false'
        BlockPublicPolicy: 'false'
        IgnorePublicAcls: 'false'
        RestrictPublicBuckets: 'false'
      WebsiteConfiguration:
        IndexDocument: index.html


  StaticContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'StaticContentBucket'
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'StaticContentBucket'
                - /*
            Principal: '*'